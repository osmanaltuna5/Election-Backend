// <auto-generated />
using System;
using Election_System.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Election_System.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Election_System.Models.Administration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("administrations");
                });

            modelBuilder.Entity("Election_System.Models.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdministrationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdministrationId");

                    b.ToTable("announcements");
                });

            modelBuilder.Entity("Election_System.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CandidateStudentId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateStudentId");

                    b.ToTable("candidates");
                });

            modelBuilder.Entity("Election_System.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("Election_System.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<int?>("FileId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessType")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("StudentId");

                    b.ToTable("documents");
                });

            modelBuilder.Entity("Election_System.Models.ElectionResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CandidateStudentId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessType")
                        .HasColumnType("int");

                    b.Property<int?>("VoterStudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateStudentId");

                    b.HasIndex("VoterStudentId");

                    b.ToTable("electionResults");
                });

            modelBuilder.Entity("Election_System.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("faculties");
                });

            modelBuilder.Entity("Election_System.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("files");
                });

            modelBuilder.Entity("Election_System.Models.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdministratonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcessType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdministratonId");

                    b.ToTable("processes");
                });

            modelBuilder.Entity("Election_System.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("GPA")
                        .HasColumnType("real");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("students");
                });

            modelBuilder.Entity("Election_System.Models.Announcement", b =>
                {
                    b.HasOne("Election_System.Models.Administration", "Administration")
                        .WithMany("Announcements")
                        .HasForeignKey("AdministrationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Administration");
                });

            modelBuilder.Entity("Election_System.Models.Candidate", b =>
                {
                    b.HasOne("Election_System.Models.Student", "CandidateStudent")
                        .WithMany("Candidacies")
                        .HasForeignKey("CandidateStudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CandidateStudent");
                });

            modelBuilder.Entity("Election_System.Models.Department", b =>
                {
                    b.HasOne("Election_System.Models.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Election_System.Models.Document", b =>
                {
                    b.HasOne("Election_System.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId");

                    b.HasOne("Election_System.Models.Student", "Student")
                        .WithMany("Documents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("File");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Election_System.Models.ElectionResult", b =>
                {
                    b.HasOne("Election_System.Models.Student", "CandidateStudent")
                        .WithMany("SecondStudents")
                        .HasForeignKey("CandidateStudentId");

                    b.HasOne("Election_System.Models.Student", "VoterStudent")
                        .WithMany("FirstStudents")
                        .HasForeignKey("VoterStudentId");

                    b.Navigation("CandidateStudent");

                    b.Navigation("VoterStudent");
                });

            modelBuilder.Entity("Election_System.Models.Process", b =>
                {
                    b.HasOne("Election_System.Models.Administration", "administration")
                        .WithMany("Processes")
                        .HasForeignKey("AdministratonId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("administration");
                });

            modelBuilder.Entity("Election_System.Models.Student", b =>
                {
                    b.HasOne("Election_System.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Election_System.Models.Administration", b =>
                {
                    b.Navigation("Announcements");

                    b.Navigation("Processes");
                });

            modelBuilder.Entity("Election_System.Models.Department", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Election_System.Models.Faculty", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Election_System.Models.Student", b =>
                {
                    b.Navigation("Candidacies");

                    b.Navigation("Documents");

                    b.Navigation("FirstStudents");

                    b.Navigation("SecondStudents");
                });
#pragma warning restore 612, 618
        }
    }
}
